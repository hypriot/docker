#!/bin/bash

if (Test-Path autogen) {
  rm -Recurse -Force autogen
}

$GITCOMMIT = "$(git rev-parse --short HEAD)"
$VERSION = "$(cat VERSION)"
$BUILDTIME = "$(date)"
$IAMSTATIC = "false"
$DOCKER_INITSHA1 = ""
$DOCKER_INITPATH = ""
$BASH_SOURCE = "hack\make\.go-autogen.ps1"

$version_autogen = @"
// +build autogen

// Package dockerversion is auto-generated at build-time
package dockerversion

// Default build-time variable for library-import.
// This file is overridden on build with build-time informations.
const (
	GitCommit string = "$GITCOMMIT"
	Version   string = "$VERSION"
	BuildTime string = "$BUILDTIME"

	IAmStatic string = "${IAMSTATIC}"
	InitSHA1  string = "$DOCKER_INITSHA1"
	InitPath  string = "$DOCKER_INITPATH"
)
// AUTOGENERATED FILE; see $BASH_SOURCE
"@ | Out-File -Encoding "Ascii" dockerversion\version_autogen.go

# Compile the Windows resources into the sources
mkdir -p autogen/winresources
$resources = @"
// Package winresources is auto-generated at build-time
// AUTOGENERATED FILE; see $BASH_SOURCE
package winresources

/*

This package is for embedding a manifest file and an icon into docker.exe.
The benefit of this is that a manifest file does not need to be alongside
the .exe, and there is an icon when docker runs, or viewed through Windows
explorer.

When make binary is run, the Dockerfile prepares the build environment by:

 - Cloning github.com/akavel/rsrc

 - Go-installing the rsrc executable

make.sh invokes hack/make/.go-autogen to:

 - Run rsrc to create a binary file (autogen/winresources/rsrc.syso) that
   contains the manifest and icon. This file is automatically picked up by
   'go build', so no post-processing steps are required. The sources for
   rsrc.syso are under hack/make/.resources-windows.

*/
"@ | Out-File -Encoding "Ascii" autogen/winresources\resources.go

rsrc `
	-manifest hack/make/.resources-windows/docker.exe.manifest `
	-ico      hack/make/.resources-windows/docker.ico `
	-o        autogen/winresources/rsrc.syso
